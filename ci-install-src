#!/bin/sh

set -e

if [ -n "$build" ]; then
  echo "$build detected, nothing to do here!"
  exit 0
fi

if [ -n "$install" ] && [ "$install" = 1 ]; then
 installpath=/srv/${project}/origin/${target}
 case "${project}" in
  sbd|booth)
   installpath=${installpath}-pacemaker-${pacemakerver}/
   ;;
  *)
   installpath=${installpath}/
   ;;
 esac
 echo rm -rf $installpath
 rm -rf $installpath
 if [ "${project}" = "pacemaker" ]; then
  echo "$MAKE clean"
  $MAKE clean
  echo "./configure --prefix=$installpath --exec-prefix=$installpath --sysconfdir="$installpath/etc" --with-initdir="$installpath/etc/init.d" --with-ocfdir="$installpath/lib/ocf"  --with-systemdsystemunitdir="$installpath/usr/lib/systemd/system" $DISTROCONFOPTS PKG_CONFIG_PATH=$EXTERNAL_CONFIG_PATH"
  ./configure --prefix=$installpath --exec-prefix=$installpath --sysconfdir="$installpath/etc" --with-initdir="$installpath/etc/init.d" --with-ocfdir="$installpath/lib/ocf"  --with-systemdsystemunitdir="$installpath/usr/lib/systemd/system" $DISTROCONFOPTS PKG_CONFIG_PATH=$EXTERNAL_CONFIG_PATH
  echo "$MAKE $PARALLELMAKE $MAKEOPTS"
  $MAKE $PARALLELMAKE $MAKEOPTS
 fi
 echo "$MAKE $MAKEINSTALLOPTS install"
 $MAKE $MAKEINSTALLOPTS install
 echo "$JOB_URL/$BUILD_NUMBER/" > $installpath/.build-info
 echo "Creating cross projects symlinks hacks for pcs testing"
 case "${project}" in
  pacemaker)
   cd $installpath/lib/ocf
   rm -f lib
   ln -sf /srv/resource-agents/origin/main/lib/ocf/lib
   cd resource.d
   rm -f heartbeat
   ln -sf /srv/resource-agents/origin/main/lib/ocf/resource.d/heartbeat
   cd pacemaker
   rm -f booth-site
   if [ "${target}" = "main" ]; then
    ln -sf /srv/booth/origin/main-pacemaker-main/lib/ocf/resource.d/pacemaker/booth-site
   else
    ln -sf /srv/booth/origin/main-pacemaker-${PACEMAKER_RELEASE}/lib/ocf/resource.d/pacemaker/booth-site
   fi
  ;;
 esac
fi
