export REMOVERPMS="libnozzle1 libknet1 libqb* corosynclib libcorosync* resource-agents libpacemaker-devel pacemaker-libs-devel pacemaker-schemas fence-agents fence-agents-common corosync-qdevice-devel dlm*"

cleanbr() {
 if [ -n "$(which yum 2>/dev/null)" ]; then
  yum remove -y $REMOVERPMS || true
  rm -rf /etc/yum.repos.d/kronosnet-build.repo || true
  rm -rf /etc/yum.repos.d/libqb-build.repo || true
  rm -rf /etc/yum.repos.d/corosync-build.repo || true
  rm -rf /etc/yum.repos.d/pacemaker-build.repo || true
  rm -rf /etc/yum.repos.d/corosync-qdevice-build.repo || true
  rm -rf /etc/yum.repos.d/sbd-build.repo || true
  rm -rf /etc/yum.repos.d/fence-agents-build.repo || true
  rm -rf /etc/yum.repos.d/resource-agents-build.repo || true
  rm -rf /etc/yum.repos.d/booth-build.repo || true
  rm -rf /etc/yum.repos.d/dlm-build.repo || true
  rm -rf /etc/yum.repos.d/gfs2utils-build.repo || true
  yum clean all
 fi
}

# always restore BaseOS libqb-devel
removerpmdeps() {
 cleanbr
 osdeps="libqb-devel"
 case ${NODE_NAME} in
  *ci-test*)
   osdeps="$osdeps libknet1-devel"
  ;;
 esac
 if [ -n "$(which yum 2>/dev/null)" ]; then
  yum install -y $osdeps
 fi
 return $1
}

installrpmdeps() {

 if [ "x$bootstrap" = "x1" ]; then
  ret="true"
 else
  ret="removerpmdeps 1"
 fi

 cleanbr
 if [ -n "$(which yum 2>/dev/null)" ]; then
  if [ -n "$KRONOSNET_REPO" ]; then
   wget -4 -O /etc/yum.repos.d/kronosnet-build.repo $KRONOSNET_REPO || $ret
  fi
  if [ -n "$LIBQB_REPO" ]; then
   wget -4 -O /etc/yum.repos.d/libqb-build.repo $LIBQB_REPO || $ret
  fi
  if [ -n "$COROSYNC_REPO" ]; then
   wget -4 -O /etc/yum.repos.d/corosync-build.repo $COROSYNC_REPO || $ret
  fi
  if [ -n "$PACEMAKER_REPO" ]; then
   wget -4 -O /etc/yum.repos.d/pacemaker-build.repo $PACEMAKER_REPO || $ret
  fi
  if [ -n "$COROSYNC_QDEVICE_REPO" ]; then
   wget -4 -O /etc/yum.repos.d/corosync-qdevice-build.repo $COROSYNC_QDEVICE_REPO || $ret
  fi
  if [ -n "$SBD_REPO" ]; then
   wget -4 -O /etc/yum.repos.d/sbd-build.repo $SBD_REPO || $ret
  fi
  if [ -n "$FENCE_AGENTS_REPO" ]; then
   wget -4 -O /etc/yum.repos.d/fence-agents-build.repo $FENCE_AGENTS_REPO || $ret
  fi
  if [ -n "$RESOURCE_AGENTS_REPO" ]; then
   wget -4 -O /etc/yum.repos.d/resource-agents-build.repo $RESOURCE_AGENTS_REPO || $ret
  fi
  if [ -n "$BOOTH_REPO" ]; then
   wget -4 -O /etc/yum.repos.d/booth-build.repo $BOOTH_REPO || $ret
  fi
  if [ -n "$DLM_REPO" ]; then
   wget -4 -O /etc/yum.repos.d/dlm-build.repo $DLM_REPO || $ret
  fi
  if [ -n "$GFS2UTILS_REPO" ]; then
   wget -4 -O /etc/yum.repos.d/gfs2utils-build.repo $GFS2UTILS_REPO || $ret
  fi
  yum install -y $RPMDEPS || removerpmdeps 1
 fi
}
