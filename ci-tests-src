#!/bin/sh

set -ev

. /root/ci-tools/ci-rpm-common

cleanlibqb() {
 # libqb test suite will leave craft behind in case of failures
 # make sure to clean before and after the test run
 if [ "$DEST" = qb ]; then
  if [ -d "/dev/shm" ]; then
   find /dev/shm -type d -name qb-\* | xargs rm -rf
  fi
  find /tmp -type d -name libqb\* | xargs rm -rf
 fi
}

fasextratests() {
 # fence-agents extra tests
 if [ "$DEST" = fas ]; then
  if [ -d fence/agents/lib ]; then
   PYTHONPATH=fence/agents/lib $PYTHON fence/agents/lib/tests/test_fencing.py
  else
   PYTHONPATH=lib $PYTHON lib/tests/test_fencing.py
  fi
 fi
}

pcmkextratests() {
 # pacemaker extra tests
 if [ "$DEST" = pcmk ]; then
  ./cts/cts-regression -V
 fi
 if [ "$DEST" = pcmk1 ]; then
  ./BasicSanity.sh -V || removerpmdeps 1
  removerpmdeps 0
 fi
}

case $build in
 rpm)
  exit 0
  ;;
 coverity)
  echo "===== CURRENT COVERITY SCAN ERRORS ====="
  cat cov.txt
  echo "===== END CURRENT COVERITY SCAN ERRORS ====="

  ret=0
  # this will trigger only with build-after-merge
  if [ "${install}" = 1 ]; then
   mkdir -p /srv/covscan/$DEST/$GIT_BRANCH/
   mv cov.json cov.txt /srv/covscan/$DEST/$GIT_BRANCH/
  else
   csdiff -xc --no-color /srv/covscan/$DEST/$TARGET/cov.json cov.json > cov.diff
   errors="$(cat cov.diff | grep ^Error: | wc -l)"
   if [ "$errors" -ne "0" ]; then
    echo "===== NEW COVERITY SCAN ERRORS FIXED ====="
    cat cov.diff
    echo "===== END NEW COVERITY SCAN ERRORS FIXED ====="
   fi
   csdiff -c --no-color /srv/covscan/$DEST/$TARGET/cov.json cov.json > cov.diff
   errors="$(cat cov.diff | grep ^Error: | wc -l)"
   if [ "$errors" -ne "0" ]; then
    echo "===== NEW COVERITY SCAN ERRORS DETECTED ====="
    cat cov.diff
    echo "===== END NEW COVERITY SCAN ERRORS DETECTED ====="
    ret=1
   fi
  fi

  exit $ret
  ;;
 *)
  ;;
esac

if [ -n "$CHECKS" ] && [ "$CHECKS" = "nochecks" ]; then
 exit 0
fi

if [ -n "$CHECKS" ] && [ "$CHECKS" = "crosscompile" ]; then
 if [ "$(find . -print -type f -exec file {} \; | grep ELF | grep $ARCH | wc -l)" = 0 ]; then
  echo "Crosscompilation test failed. Unable to find any $ARCH binaries"
  exit 1
 fi
 exit 0
fi

if [ -z "$CHECKS" ]; then
 if [ "$DEST" = pcmk1 ] && [ "${NODE_NAME}" != centos-6-x86-64 ]; then
  CHECKS="check distcheck $EXTRACHECKS"
 else
  CHECKS="$EXTRACHECKS"
 fi
fi

for i in $CHECKS; do
 cleanlibqb
 echo "$MAKE $MAKETESTOPTS $i DISTCHECK_CONFIGURE_FLAGS="$DISTROCONFOPTS" PKG_CONFIG_PATH=$EXTERNAL_CONFIG_PATH || (find . -name "*test-suite.log" -exec cat {} \; ; false)"
 $MAKE $MAKETESTOPTS $i DISTCHECK_CONFIGURE_FLAGS="$DISTROCONFOPTS" PKG_CONFIG_PATH=$EXTERNAL_CONFIG_PATH || (find . -name "*test-suite.log" -exec cat {} \; ; false)
done

cleanlibqb
fasextratests
pcmkextratests
