#!/bin/sh

set -ev

cd /root

$HOME/ci-tools/ci-update-common

yum clean all

# Enable OpenStack repos for fence-agents build dependencies
case "${NODE_NAME}" in
 rhel*x86*|rhel*power*)
  rpm -qa | grep rhos-release || yum install -y http://download.eng.brq.redhat.com/rcm-guest/puddles/OpenStack/rhos-release/rhos-release-latest.noarch.rpm
  RHELVER=$(echo $NODE_NAME | sed -e 's/rhel//g' -e  's/z-.*//g' | cut --characters 1-1,2-2 --output-delimiter '.')
  echo "Detected RHEL version: $RHELVER"
 ;;
 centos-7.2*)
  EXTRAOPTS="--skip-broken"
 ;;
 centos-7*)
  yum install -y centos-release-openstack-stein epel-release
  EXTRAOPTS="--skip-broken"
 ;;
 centos-8*|anvil-ci-centos-8*|anvil-ci-bm*)
  yum install -y centos-release-openstack-ussuri epel-release
 ;;
 anvil-ci-centos-9*)
  yum install -y epel-release
 ;;
esac

case "${NODE_NAME}" in
 anvil-ci-centos-9*|centos-9*|rhel9*power9*)
  cd /etc/yum.repos.d/
  rm -rf delorean*.repo
  wget https://trunk.rdoproject.org/centos9/current/delorean.repo
  wget https://trunk.rdoproject.org/centos9-master-preview/delorean-deps.repo
 ;;
esac

case "${NODE_NAME}" in
 anvil-ci*)
  yum install -y fence-agents-common resource-agents mock wget rpm-build createrepo_c yum-utils
 ;;
esac

case "${NODE_NAME}" in
 anvil-ci-bm*)
  EXTRAOPTS="--exclude=neo4j --exclude=cypher-shell"
 ;;
esac

#case "${NODE_NAME}" in
# rhel7*x86*|rhel7*power*)
#  rhos-release 14
# ;;
# rhel8*x86*|rhel8*power*)
#  rhos-release 15
# ;;
#esac

# Disable repos that donÂ´t exist or are "bad"
case "${NODE_NAME}" in
 rhel7*power*)
  yum-config-manager --save --setopt=rhelosp-14.0-optools-puddle.skip_if_unavailable=true
  yum-config-manager --save --setopt=rhelosp-ceph-3-mon.skip_if_unavailable=true
  yum-config-manager --save --setopt=rhelosp-ceph-3-osd.skip_if_unavailable=true
  yum-config-manager --save --setopt=rhelosp-ceph-3-tools.skip_if_unavailable=true
  yum-config-manager --save --setopt=rhelosp-rhel-${RHELVER}-ha.skip_if_unavailable=true
  yum-config-manager --save --setopt=rhelosp-rhel-${RHELVER}-server.skip_if_unavailable=true
 ;;
esac

# not all yum based distro have python3, deal with it
if [ -z "$python" ]; then
 python=python3
fi

yum -y $EXTRAOPTS update

EXTRADEPS=""

case "${NODE_NAME}" in
 *centos-7.2*)
  PYTHONDEV="python34 python34-devel"
 ;;
 *)
  PYTHONDEV="python-devel python3-devel"
 ;;
esac
# Install special case packages
for i in $PYTHONDEV python3-setuptools python3-pip python3-rpm-macros platform-python-devel libzstd-devel libcgroup-devel; do
 yum -y install $i || true
done

yum -y install systemd-python || yum -y install python3-systemd
EXTRADEPS="systemd-devel $EXTRADEPS"

# available only on ppc
yum -y install libservicelog-devel || true

# pcs builds only on recent distros
case "${NODE_NAME}" in
 fedora*|rhel8*|centos-8*|centos-9*|anvil-ci*|rhel9*)
  EXTRADEPS="ruby ruby-devel rubygems rubygem-bundler fontconfig liberation-sans-fonts overpass-fonts npm rpmdevtools python3-lxml python3-wheel python3-setuptools_scm $EXTRADEPS"
 ;;
esac

# available only with python3
if [ "$python" = python3 ]; then
 EXTRADEPS="execstack python3-pexpect python3-pycurl python3-suds python3-requests openwsman-python3 python3-pyroute2 python3-httplib2 $EXTRADEPS"
else
 EXTRADEPS="pexpect openwsman-python python-suds python2-google-api-client python-requests $EXTRADEPS"
 if [ "$epel" = new ]; then
  EXTRADEPS="python-boto3 python-s3transfer $EXTRADEPS"
 else
  EXTRADEPS="python2-boto3 $EXTRADEPS"
 fi
fi

# Cloud packages
case "${NODE_NAME}" in
 rhel*s390*|rhel9*power*|centos*s390*|centos*power*|anvil*centos*9*)
 ;;
 *centos-7.2*)
  EXTRADEPS="python34"
 ;;
 *)
  EXTRADEPS="${python}-keystoneclient ${python}-keystoneauth1 ${python}-novaclient $EXTRADEPS"
  if [ "$python" = python3 ]; then
    for i in python3-boto3 python3-google-api-client; do
      yum -y install $i || true
    done
  fi
 ;;
esac

# knet rust bindings
if [ -n "$KNETRUST" ] && [ "$KNETRUST" = yes ]; then
  EXTRADEPS="$EXTRADEPS cargo rust bindgen clippy rustfmt"
fi

case "${NODE_NAME}" in
 rhel9*|centos-9*)
  EXTRADEPS="$EXTRADEPS rust cargo"
 ;;
esac

# shellcheck for resource-agents ci/build.sh
case "${NODE_NAME}" in
 fedora*)
  EXTRADEPS="ShellCheck $EXTRADEPS"
 ;;
esac

# annobin-annocheck is off sync on rhel85 power
case "${NODE_NAME}" in
 *power*)
 ;;
 *)
  EXTRADEPS="annobin-annocheck $EXTRADEPS"
 ;;
esac

yum -y install         \
 OpenIPMI-devel        \
 asciidoc              \
 autoconf              \
 automake              \
 bison                 \
 byacc                 \
 bzip2-devel           \
 check-devel           \
 clang                 \
 curl                  \
 dbus-devel            \
 docbook-style-xsl     \
 doxygen               \
 flex                  \
 gcc                   \
 gettext-devel         \
 git                   \
 glib2-devel           \
 gnutls-devel          \
 groff                 \
 help2man              \
 inkscape              \
 jq                    \
 libaio-devel          \
 libblkid-devel        \
 libcmocka-devel       \
 libcurl-devel         \
 libffi-devel          \
 libgcrypt-devel       \
 libnet-devel          \
 libnl3-devel          \
 libqb-devel           \
 libtool               \
 libtool-ltdl-devel    \
 libuuid-devel         \
 libvirt-devel         \
 libxml2-devel         \
 libxslt               \
 libxslt-devel         \
 lksctp-tools-devel    \
 lz4-devel             \
 lzo-devel             \
 make                  \
 net-snmp-devel        \
 ncurses-devel         \
 nss-devel             \
 openssl-devel         \
 pam-devel             \
 perl                  \
 psmisc                \
 rpm-build             \
 rpmlint               \
 rsync                 \
 time                  \
 valgrind              \
 which                 \
 xz-devel              \
 zlib-devel            \
 $EXTRADEPS

case "${NODE_NAME}" in
 *vapor*)
  wget -O /etc/pki/ca-trust/source/anchors/RH-IT-Root-CA.crt https://password.corp.redhat.com/RH-IT-Root-CA.crt
  wget -O /etc/pki/ca-trust/source/anchors/Eng-CA.crt https://engineering.redhat.com/Eng-CA.crt
  update-ca-trust
  if [ ! -f $HOME/.config/openstack/clouds.yaml ]; then
   echo "Install manually openstack cloud config!"
   exit 1
  fi
  yum -y install brewkoji createrepo python38 python38-devel
  alternatives --set python3 /usr/bin/python3.8
  pip3 uninstall --yes vapor || true
  pip3 --disable-pip-version-check install git+https://gitlab.cee.redhat.com/clusterqe/vapor.git#egg=vapor[colorlog]
 ;;
esac

getent group haclient >/dev/null || groupadd -r haclient -g 189
getent passwd hacluster >/dev/null || useradd -r -g haclient -u 189 -s /sbin/nologin -c "cluster user" hacluster
