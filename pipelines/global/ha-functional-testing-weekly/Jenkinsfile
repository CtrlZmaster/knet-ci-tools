// Jenkinsfile for ha-functional-testing-weekly CI project

@Library(['GlobalLib', 'ProjectLib']) _

// Globals
def project = 'ha-functional-testing-weekly'
def info = ['project': project, 'branch': '']

pipeline {
    agent { label 'built-in' }

    parameters {
	string(name: 'dryrun', defaultValue: '0', description: 'set to 1 to see what the pipeline would do, without actually doing anything')
    }

    stages {
	stage('Initialisation') {
	    steps {
		getBuildInfoCommon(info)
	    }
	}
	stage('Run tests') {
	    steps {
		script {
		    def tests = genTestBuilds(params.dryrun, info)
		    try {
			parallel tests
		    } catch (err) {
			println("Jenkinsfile caught "+err)
			info['exception_text'] += "\nparallel error caught: {$err}\n"
		    }
		}
	    }
	}
    }
    post {
	success {
	    script {
		info['state'] = 'success'
		projectFinishUp(info)
	    }
	}
	failure {
	    script {
		info['state'] = 'failure'
		projectFinishUp(info)
	    }
	}
    }
}
