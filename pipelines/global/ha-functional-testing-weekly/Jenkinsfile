// Jenkinsfile for ha-functional-testing-weekly CI project

@Library(['GlobalLib', 'ProjectLib']) _

// Globals
def project = 'ha-functional-testing-weekly'
def info = ['project': project, 'branch': '']

pipeline {
    agent { label 'built-in' }

    stages {
	stage('Initialisation') {
	    steps {
		getBuildInfoCommon(info)
	    }
	}
	stage('smoke tests') {
	    parallel {
		// no more than 3 OSP environments at a time
		stage('rhel8 z-stream next-stable osp') {
		    steps {
			build job: 'global/ha-functional-testing',
			    parameters: [[$class: 'LabelParameterValue', name: 'provider', label: 'osp'],
					 string(name: 'dryrun', value : "${dryrun}"),
					 string(name: 'rhelver', value: '8'),
					 string(name: 'zstream', value : 'yes'),
					 string(name: 'upstream', value : 'next-stable'),
					 string(name: 'tests', value : 'smoke')]
		    }
		}
		stage('rhel9 z-stream next-stable osp') {
		    steps {
			build job: 'global/ha-functional-testing',
			    parameters: [[$class: 'LabelParameterValue', name: 'provider', label: 'osp'],
					 string(name: 'dryrun', value : "${dryrun}"),
					 string(name: 'rhelver', value: '9'),
					 string(name: 'zstream', value : 'yes'),
					 string(name: 'upstream', value : 'next-stable'),
					 string(name: 'tests', value : 'smoke')]
		    }
		}
		stage('rhel9 z-stream main osp') {
		    steps {
			build job: 'global/ha-functional-testing',
			    parameters: [[$class: 'LabelParameterValue', name: 'provider', label: 'osp'],
					 string(name: 'dryrun', value : "${dryrun}"),
					 string(name: 'rhelver', value: '9'),
					 string(name: 'zstream', value : 'yes'),
					 string(name: 'upstream', value : 'main'),
					 string(name: 'tests', value : 'smoke')]
		    }
		}
	    }
	}
	stage('regression tests') {
	    parallel {
		// no more than 3 OSP environments at a time
		stage('rhel8 next-stable osp') {
		    steps {
			build job: 'global/ha-functional-testing',
			    parameters: [[$class: 'LabelParameterValue', name: 'provider', label: 'osp'],
					 string(name: 'dryrun', value : "${dryrun}"),
					 string(name: 'rhelver', value: '8'),
					 string(name: 'zstream', value : 'no'),
					 string(name: 'upstream', value : 'next-stable'),
					 string(name: 'tests', value : 'all')]
		    }
		}
		stage('rhel9 next-stable osp') {
		    steps {
			build job: 'global/ha-functional-testing',
			    parameters: [[$class: 'LabelParameterValue', name: 'provider', label: 'osp'],
					 string(name: 'dryrun', value : "${dryrun}"),
					 string(name: 'rhelver', value: '9'),
					 string(name: 'zstream', value : 'no'),
					 string(name: 'upstream', value : 'next-stable'),
					 string(name: 'tests', value : 'all')]
		    }
		}
		stage('rhel9 main osp') {
		    steps {
			build job: 'global/ha-functional-testing',
			    parameters: [[$class: 'LabelParameterValue', name: 'provider', label: 'osp'],
					 string(name: 'dryrun', value : "${dryrun}"),
					 string(name: 'rhelver', value: '9'),
					 string(name: 'zstream', value : 'no'),
					 string(name: 'upstream', value : 'main'),
					 string(name: 'tests', value : 'all')]
		    }
		}
	    }
	}
    }
    post {
	success {
	    script {
		info['state'] = 'success'
		projectFinishUp(info)
	    }
	}
	failure {
	    script {
		info['state'] = 'failure'
		projectFinishUp(info)
	    }
	}
    }
}
